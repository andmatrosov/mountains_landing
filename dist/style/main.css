/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */*{-webkit-box-sizing:border-box;box-sizing:border-box}html{font-size:10px;overflow-x:hidden}body{font-family:Chronicle Roman,serif;background-color:#0b1d26;position:relative}ul{list-style:none;margin:0}a{text-decoration:none}ul li a{color:#fff}.container{max-width:1462px;margin:0 auto}.bg{top:0;left:0;min-height:100vh;height:1600px;overflow:hidden;z-index:-1}.bg,.bg-wrapper{position:absolute;width:100%}.bg-wrapper img{width:100%}.bg-wrapper__sky{top:0;left:0;z-index:1}.bg-wrapper__sky:after{content:"";position:absolute;top:0;bottom:0;left:0;right:0;background:-o-linear-gradient(119.76deg,rgba(11,29,38,0) 31.06%,#0b1d26 108.93%);background:linear-gradient(330.24deg,rgba(11,29,38,0) 31.06%,#0b1d26 108.93%)}.bg-wrapper__mountains{top:465px;left:0;z-index:2}.bg-wrapper__land{position:relative;top:768px;z-index:3}.bg-wrapper--bottom-gradient:after{content:"";position:absolute;bottom:-206px;left:0;right:0;height:700px;background:-webkit-gradient(linear,left top,left bottom,from(rgba(11,29,38,0)),color-stop(50.38%,#0b1d26));background:-o-linear-gradient(top,rgba(11,29,38,0) 0,#0b1d26 50.38%);background:linear-gradient(180deg,rgba(11,29,38,0),#0b1d26 50.38%)}.side-content{top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);font-size:1.8rem;line-height:2.1rem;font-family:Gilroy Bold,sans-serif;font-weight:700;color:#fff;text-align:right}.side-content--right{right:80px}.side-content--left{left:80px}.side-content--fixed{position:fixed}.social{padding:0;text-align:left}.social__item{margin-bottom:24px}.social__item p{display:inline-block;width:80px;height:20px;-webkit-transform:rotate(90deg) translate(-20px,-100%);-ms-transform:rotate(90deg) translate(-20px,-100%);transform:rotate(90deg) translate(-20px,-100%);-webkit-transform-origin:0 -5px;-ms-transform-origin:0 -5px;transform-origin:0 -5px}.scroll-nav{position:relative;padding-right:32px;padding-top:20px;padding-bottom:20px;border-right:3px solid hsla(0,0%,100%,.5)}.scroll-nav__item{position:relative;margin-top:10px;margin-bottom:40px;-webkit-transition:all .2s;-o-transition:all .2s;transition:all .2s}.scroll-nav__item:first-child{margin-top:0}.scroll-nav__item:last-child{margin-bottom:0}.scroll-nav__item.active,.scroll-nav__item.active:after{-webkit-transition:all .2s;-o-transition:all .2s;transition:all .2s}.scroll-nav__item.active:after{content:"";width:3px;height:60px;position:absolute;top:-20px;right:-35px;background-color:#fff}.title{color:#fff;font-size:6.4rem}.title__sup{position:relative;font-family:Gilroy Extrabold,sans-serif;font-size:1.8rem;color:#fbd784;letter-spacing:6px;text-transform:uppercase;padding-left:108px}.title__sup:before{content:"";width:72px;height:2px;background-color:#fbd784;position:absolute;top:-webkit-calc(50% - 1px);top:calc(50% - 1px);left:0}.title__content{font-family:Chronicle Roman,serif;font-weight:600}.home{position:relative;width:100%;padding-left:80px;padding-right:80px;min-height:100vh;margin:0 auto}.home__header{position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between}.home--pt{padding-top:64px}.home--mb{margin-bottom:100px}.home__logo{font-size:2.4rem;letter-spacing:1px;text-transform:uppercase}.home__account,.home__logo{display:inline-block;width:108px;color:#fff}.home__account{position:relative;font-family:Gilroy Bold,sans-serif;text-align:right;font-size:1.7rem;line-height:2.4rem}.home__account:before{content:"\f2bd";font-family:Font Awesome\ 5 Free;left:0;font-size:2.4rem}.home__account:before,.home__burger{position:absolute;top:0;width:24px;height:24px}.home__burger{display:none;right:0;background-color:transparent;-webkit-transition:all .2s;-o-transition:all .2s;transition:all .2s;overflow:hidden}.home__burger span{display:inline-block;height:2px;width:100%;background-color:#fff}.home__title{font-size:8.8rem;line-height:10rem;margin:3.2rem 0}.home__container{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;padding-top:19.8rem;margin:0 auto}.desc{display:inline-block;color:#fff;font-family:Gilroy,sans-serif;font-size:1.8rem;line-height:3.2rem}.desc-link{position:relative;padding-right:41px;margin:0}.desc-link:after{content:"";position:absolute;width:24px;height:24px;background-position:50%;background-repeat:no-repeat;background-size:contain;top:50%;right:0;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%)}.desc-link--accent{color:#fbd784}.desc-link--down:after{background-image:url(../img/icons/navigation/arrow-down.png)}.desc-link--right:after{background-image:url(../img/icons/navigation/arrow-right.png)}.menu__item{display:inline-block}.menu__item--margin{margin:0 40px}.menu__item a{color:#fff;text-decoration:none;font-size:1.8rem;font-family:Gilroy,sans-serif}.menu__account,.side-menu{display:none}.side-menu{position:fixed;font-family:Gilroy,sans-serif;top:0;right:0;width:50vw;max-width:250px;height:100vh;background-color:#0b1d26;padding:110px 20px;font-size:2.4rem;line-height:2.4rem;-webkit-transform:translateX(100%);-ms-transform:translateX(100%);transform:translateX(100%);-webkit-transition:all .3s;-o-transition:all .3s;transition:all .3s;z-index:9}.side-menu--active{-webkit-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0);-webkit-box-shadow:-2px 0 6px 2px rgba(0,0,0,.3);box-shadow:-2px 0 6px 2px rgba(0,0,0,.3)}.side-menu__close{display:inline-block;width:24px;height:24px;position:absolute;left:20px;top:20px}.side-menu__close span{display:inline-block;width:30px;height:2px;background-color:#fff;-webkit-transform-origin:1px 1px;-ms-transform-origin:1px 1px;transform-origin:1px 1px}.side-menu__close span:first-child{-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg)}.side-menu__close span:last-child{-webkit-transform:rotate(-45deg);-ms-transform:rotate(-45deg);transform:rotate(-45deg)}.side-menu__list{display:inline-block;padding:0;margin:0 auto}.side-menu__item{position:relative;margin-bottom:30px}.side-menu__item:last-child:after{display:none}.side-menu__item:after{content:"";position:absolute;width:130%;height:1px;bottom:-15px;left:0;background-color:hsla(0,0%,100%,.3)}.side-menu__social{position:absolute;left:20px;bottom:130px;color:#fff;font-weight:700}.side-menu__social p{margin:10px 0}.side-menu__social span{margin-right:20px}.side-menu__social span a{font-size:3.2rem;color:#fff}.main--pt{padding-top:200px}.main-content__item{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between}.main-content__item--mb{margin-bottom:200px}.main-content__item--reversed{-webkit-box-orient:horizontal;-webkit-box-direction:reverse;-webkit-flex-direction:row-reverse;-ms-flex-direction:row-reverse;flex-direction:row-reverse}.main-content__title{padding-right:100px}.main-content__text{width:65%;max-width:632px;padding:141px 0}.main-content__img{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;overflow:hidden}.main-content__img img{max-width:100%}.main-content__desc{font-family:Gilroy,sans-serif;font-weight:600;font-size:1.8rem;line-height:32px;color:#fff}.footer{padding-bottom:122px}.footer-content{-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between}.footer-content,.footer-content--right{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex}.footer-content--left{width:45%;min-width:282px;position:relative}.footer__desc{font-family:Gilroy,sans-serif;font-weight:600;font-size:1.8rem;line-height:3.2rem;color:#fff}.footer__desc--margin{margin-top:24px}.footer__copy{position:absolute;bottom:20px;color:#fff;opacity:.5}.footer__copy,.footer__list{font-family:Gilroy,sans-serif;font-weight:500;font-size:1.8rem}.footer__list{padding:0;margin:0}.footer__list:first-child{margin-right:212px}.footer__list-header{color:#fbd784;font-size:2.4rem;font-weight:600}.footer__item{margin-bottom:24px}@font-face{font-family:Chronicle Light Italic;font-style:normal;font-weight:400;src:local("Chronicle Display Light Italic"),url("../fonts/Chronicle Display Light Italic.woff") format("woff")}@font-face{font-family:Chronicle Roman;font-style:normal;font-weight:600;src:local("Chronicle Display Roman"),url("../fonts/Chronicle Display Roman.woff") format("woff")}@font-face{font-family:Chronicle Semibold;font-style:normal;font-weight:400;src:local("Chronicle Display Semibold"),url("../fonts/Chronicle Display Semibold.woff") format("woff")}@font-face{font-family:Chronicle Black;font-style:normal;font-weight:400;src:local("Chronicle Display Black"),url("../fonts/Chronicle Display Black.woff") format("woff")}@font-face{font-family:Gilroy;src:local("Gilroy Medium"),local("Gilroy-Medium"),url(../fonts/Gilroy-Medium.woff2) format("woff2"),url(../fonts/Gilroy-Medium.woff) format("woff"),url(../fonts/Gilroy-Medium.ttf) format("truetype");font-weight:500;font-style:normal}@font-face{font-family:Gilroy;src:local("Gilroy Semibold"),local("Gilroy-Semibold"),url(../fonts/Gilroy-Semibold.woff2) format("woff2"),url(../fonts/Gilroy-Semibold.woff) format("woff"),url(../fonts/Gilroy-Semibold.ttf) format("truetype");font-weight:600;font-style:normal}@font-face{font-family:Gilroy Bold;src:local("Gilroy Bold"),local("Gilroy-Bold"),url(../fonts/Gilroy-Bold.woff2) format("woff2"),url(../fonts/Gilroy-Bold.woff) format("woff"),url(../fonts/Gilroy-Bold.ttf) format("truetype");font-weight:700;font-style:normal}@font-face{font-family:Gilroy Extrabold;src:local("Gilroy Extrabold"),local("Gilroy-Extrabold"),url(../fonts/Gilroy-Extrabold.woff2) format("woff2"),url(../fonts/Gilroy-Extrabold.woff) format("woff"),url(../fonts/Gilroy-Extrabold.ttf) format("truetype");font-weight:800;font-style:normal}@media (min-width:1462px){html{font-size:10px}.container{max-width:1462px;margin:0 auto;padding:0 40px}.side-content--right{right:80px}.side-content--left{left:80px}}@media (max-width:1461px){html{font-size:9px}.container{max-width:-webkit-calc(100% - 160px);max-width:calc(100% - 160px);margin:0 auto}.side-content--right{right:40px}.side-content--left{left:40px}.home{padding-left:40px;padding-right:40px}.main-content__text{padding:141px 0}.main-content__item:nth-child(2n) .main-content__text{padding-left:40px}.main-content__item:nth-child(odd) .main-content__text{padding-right:40px}.title__sup{font-size:1.6rem;padding-left:98px}.title__sup:before{width:62px}.home__title{font-size:7.8rem;line-height:9.5rem}.home__container{padding-top:16rem}}@media (max-width:1199.98px){.side-content--right{right:30px}.side-content--left{left:30px}.container{width:-webkit-calc(100% - 160px);width:calc(100% - 160px)}.main-content__item{margin-bottom:100px}.main-content__item:nth-child(2n) .main-content__text{padding-left:40px}.main-content__item:nth-child(odd) .main-content__text{padding-right:40px}.main-content__text{padding:20px 0}}@media (min-width:991.98px) and (max-width:1090px){.bg-wrapper--bottom-gradient:after{height:300px;bottom:-150px}.bg-wrapper__mountains{top:420px}.bg-wrapper__mountains:after{height:200px}.bg-wrapper__land{top:720px}}@media (max-width:991.98px){html{font-size:8px}.container{max-width:-webkit-calc(100% - 80px);max-width:calc(100% - 80px);width:100%}.bg-wrapper__mountains{top:335px}.bg-wrapper__land{top:538px}.bg-wrapper--bottom-gradient:after{height:400px}.title{font-size:6rem;margin-top:30px;margin-bottom:30px;padding-right:30px}.title__sup{font-size:1.5rem;padding-left:86px}.title__sup:before{width:55px}.home--pt{padding-top:40px}.home__title{font-size:6rem;line-height:8rem}.home__container{padding-top:15rem}.side-content--fixed{position:absolute}.scroll-nav{display:none}.main-content__item--mb{margin-bottom:60px}.main-content__item:last-child.main-content__item--mb{margin-bottom:80px}.main-content__text{padding:20px}.footer__list:first-child{margin-right:150px}}@media (max-width:915.98px){.title{font-size:5.8rem;line-height:6rem;margin-top:25px;margin-bottom:25px;padding-right:0}.main-content__desc{font-size:1.6rem;line-height:2.9rem}}@media (max-width:767.98px){.bg-wrapper__mountains{top:240px}.bg-wrapper__land{top:370px}.container{width:100%;max-width:-webkit-calc(100% - 40px);max-width:calc(100% - 40px)}.home--pt{padding-top:40px}.home__header{-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}.home__logo{text-align:center}.home__burger{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;z-index:1;cursor:pointer}.home__burger span{-webkit-transition:all .3s;-o-transition:all .3s;transition:all .3s;-webkit-transform-origin:1px 1px;-ms-transform-origin:1px 1px;transform-origin:1px 1px}.main--pt{padding-top:30px}.main-content__item:nth-child(2n) .main-content__text{padding-left:10px;padding-right:0}.main-content__item:nth-child(odd) .main-content__text{padding-right:10px;padding-left:0}.main-content__text{min-width:320px}.main-content__img{min-width:312px}.home__account,.menu{display:none}.side-menu{display:inline-block}.footer{padding-bottom:50px}.footer-content{margin:0 20px}.footer-content--right{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column}.footer-content--left{min-height:160px}.footer__logo{text-align:left}.footer__list:first-child{margin-right:0}}@media (max-width:670.98px){.title{font-size:5.2rem;line-height:5.8rem}.title__sup{line-height:2.4rem}.main-content__item{-webkit-box-orient:vertical;-webkit-box-direction:reverse;-webkit-flex-direction:column-reverse;-ms-flex-direction:column-reverse;flex-direction:column-reverse;width:100%;margin-bottom:80px;position:relative}.main-content__item:after{content:"";position:absolute;width:100%;height:1px;bottom:-10px;background-color:hsla(0,0%,100%,.4);-webkit-box-shadow:0 1px 1px 1px rgba(0,0,0,.2);box-shadow:0 1px 1px 1px rgba(0,0,0,.2)}.main-content__item:nth-child(2n) .main-content__text,.main-content__item:nth-child(odd) .main-content__text{padding-left:0;padding-right:0}.main-content__text{width:100%}.main-content__img img{margin:0 auto}picture{width:100%}}@media (max-width:575.98px){.side-content--left{display:none}.bg{height:100vh}.bg-wrapper{width:130%}.bg-wrapper img{-webkit-transform:translateX(-10%);-ms-transform:translateX(-10%);transform:translateX(-10%)}.bg-wrapper__sky{width:170%;-webkit-transform:translateX(-20%);-ms-transform:translateX(-20%);transform:translateX(-20%)}.bg-wrapper__mountains{top:270px}.bg-wrapper__mountains:after{height:200px}.bg-wrapper__land{top:420px}.bg-wrapper__land:after{bottom:-100px;height:250px}.home__container{padding-top:calc(50vh - 62px);-webkit-transform:translateY(-30%);-ms-transform:translateY(-30%);transform:translateY(-30%)}.home__title{font-size:4rem;line-height:4.5rem}lh .home__title-sup{font-size:1.1rem;padding-left:60px}lh .home__title-sup:before{width:42px;height:1px}.footer-content--left{min-width:140px;min-height:240px}}@media (max-width:375.98px){.bg{height:100vh}.bg-wrapper{width:130%}.bg-wrapper img{-webkit-transform:translateX(-10%);-ms-transform:translateX(-10%);transform:translateX(-10%)}.bg-wrapper__sky{width:150%;-webkit-transform:translateX(-20%);-ms-transform:translateX(-20%);transform:translateX(-20%)}.bg-wrapper__mountains{top:190px}.bg-wrapper__mountains:after{height:200px}.bg-wrapper__land{top:330px}.bg-wrapper__land:after{bottom:-100px;height:250px}.home__title{font-size:2.9rem;line-height:3.2rem}.home__title-sup{padding-left:60px}.home__title-sup:before{width:42px}.desc-link{font-size:1.6rem;padding-right:35px}.desc-link:after{width:18px;height:18px}.main--pt{padding-top:0;margin-top:0}.main-content__title{font-size:2.9rem;line-height:3.2rem}.main-content__desc{font-size:1.4rem;line-height:2rem}.main-content__img,.main-content__text{min-width:0}}

/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
